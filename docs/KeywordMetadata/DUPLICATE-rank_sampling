Blurb:: Sample allocation based on rank sampling within multilevel function train

Description:: 
Multilevel function train based on regression may allocate the
number of samples per level based on the collocation ratio times
the regression size, as determined by the rank per core and the
basis order per dimension, where these ranks and orders may be either
specified values (for initial sample allocation), incremented values
(for external refinement cases), or recovered values (in the case of internal
adaptation such as \c adapt_rank).

For each QoI, the regression size can be determined as follows:

- For v variables, orders o is a v-vector and ranks r is a v+1-vector 
- the first core is a 1 x r_1 row vector and contributes \f$ (o_0 + 1) r_1 \f$ terms
- the  last core is a r_v x 1 col vector and contributes \f$ (o_{v-1}+1) r_{v-1} \f$ terms
- the middle v-2 cores are matrices that contribute \f$ r_i r_{i+1} (o_i + 1) \f$ terms, i = 1, ..., v-2
- neighboring vec/mat dimensions must match, so there are v-1 unique ranks

The adaptive algorithm starts from a pilot sample, shapes the profile
based on recovered rank, and iterates until convergence.

This capability is \b experimental and under active development.

Topics::

Examples::

This example starts with rank-two order-two initial expansion for each
level, with twice as many samples as regression coefficients.  As the
recovered rank is updated for each level, as dictated by the internal
\c adapt_rank approach, the number of samples is incremented as needed
in order to synchronize with the specified collocation ratio.  In this
case, the basis order is fixed and only the ranks and associated samples
are updated for each level.

\verbatim
method,
	model_pointer = 'HIERARCH'
	multifidelity_function_train
	  allocation_control rank_sampling
	  p_refinement uniform
	    start_rank_sequence  = 2 2 2 2 2
	    adapt_rank  kick_rank = 2  max_rank  = 10
	    start_order_sequence = 2 2 2 2 2
	    collocation_ratio = 2.  seed = 160415
	    convergence_tolerance = 1.e-2
	    max_refinement_iterations = 5
\endverbatim

Theory::

Faq::
See_Also::
